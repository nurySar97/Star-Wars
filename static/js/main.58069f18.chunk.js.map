{"version":3,"sources":["api/api.js","reducers/planets-reducer.js","components/Common/Paginator/Paginator.js","assets/images/Jedi.gif","components/Common/Preloader/PreloaderJedy/PreloaderJedy.jsx","components/Planets/Planet/Planet/Planet.jsx","helpers/Capitalize.js","components/Planets/Planets.jsx","components/Planets/PlanetsContainer.jsx","components/Profile/Profile.jsx","reducers/profile-reducer.js","components/Profile/ProfileContainer.js","App.js","reportWebVitals.js","redux/redux-store.js","index.js"],"names":["instance","Axios","baseURL","planetsApi","currentPage","get","profileApi","id","SET_CURRENT_PAGE","SET_PLANETS","SET_TOTAL_COUNT","SET_IS_FETCHING","initialState","planets","totalPlanetCount","isFetching","setCurrentPageAC","type","payload","setPlanetsAC","setIsFetchingAC","planetsReducer","state","action","Paginator","onPageChanged","paginatorCell","Array","Math","ceil","map","e","index","className","onClick","disabled","PreloaderJedy","src","jedy","alt","Planet","word","name","climate","population","to","split","w","toLocaleUpperCase","slice","join","Planets","p","url","PlanetsContainer","page","props","getPlanetsThunk","this","React","Component","connect","planetsData","dispatch","a","response","status","count","data","results","Profile","SET_PROFILE","profile","setProfilesAC","profileReducer","ProfileContainer","match","params","getPlanetProfileThunk","compose","profileData","withRouter","App","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","require","createStore","combineReducers","applyMiddleware","store","thunk","window","ReactDOM","StrictMode","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.58069f18.chunk.js","sourcesContent":["import * as Axios from 'axios';\r\n\r\nconst instance = Axios.create({\r\n    baseURL: 'https://swapi.dev/api/'\r\n})\r\n\r\n\r\n\r\n\r\nexport const planetsApi = {\r\n    getPlanets: currentPage => {\r\n        return (\r\n            instance.get(`planets/?page=${currentPage}`)\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport const profileApi = {\r\n    getProfile: id => {\r\n        return (\r\n            instance.get(`planets/${id}/`)\r\n        )\r\n    }\r\n}","import { planetsApi } from \"../api/api\";\r\n\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_PLANETS = 'SET_PLANETS';\r\nconst SET_TOTAL_COUNT = 'SET_TOTAL_COUNT'\r\nconst SET_IS_FETCHING = 'SET_IS_FETCHING'\r\n\r\nconst initialState = {\r\n    planets: [],\r\n    currentPage: 1,\r\n    totalPlanetCount: 0,\r\n    isFetching: false\r\n}\r\n\r\nconst planetsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_IS_FETCHING:\r\n            return {...state, isFetching: action.payload}\r\n        case SET_TOTAL_COUNT:\r\n            return {...state, totalPlanetCount: action.payload}\r\n        case SET_PLANETS:\r\n            return { ...state, planets: action.payload }\r\n        case SET_CURRENT_PAGE:\r\n            return { ...state, currentPage: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nconst setCurrentPageAC = currentPage => ({ type: SET_CURRENT_PAGE, payload: currentPage })\r\nconst setPlanetsAC = planets => ({ type: SET_PLANETS, payload: planets })\r\nconst setTotalCountAC = count => ({type: SET_TOTAL_COUNT, payload: count})\r\nconst setIsFetchingAC = isFetching => ({type: SET_IS_FETCHING, payload: isFetching})\r\n\r\n\r\n\r\n\r\n\r\nexport const getPlanetsThunk = (currentPage) => async dispatch => {\r\n    dispatch(setIsFetchingAC(true))\r\n    dispatch(setCurrentPageAC(currentPage))\r\n    let response = await planetsApi.getPlanets(currentPage)\r\n    if (response.status === 200) {\r\n        dispatch(setTotalCountAC(response.data.count))\r\n        let planets = response.data.results\r\n        dispatch(setPlanetsAC(planets))\r\n    }\r\n    dispatch(setIsFetchingAC(false))\r\n\r\n}\r\n\r\nexport default planetsReducer;","import React from 'react';\r\nimport './Paginator.css'\r\n\r\n\r\nconst Paginator = ({ onPageChanged, currentPage, totalPlanetCount }) => {\r\n    let onPageChangedHandleClick = cell => {\r\n        onPageChanged(cell)\r\n    }\r\n    let paginatorCell = [...new Array(Math.ceil(totalPlanetCount / 10))].map((e, index) => {\r\n        return (\r\n            <button\r\n                className={(currentPage === index + 1) ? \"activecell\" : \"cell\"}\r\n                onClick={() => onPageChangedHandleClick(index + 1)}\r\n                key={index + 1}\r\n                disabled={currentPage === index + 1}\r\n            />\r\n        )\r\n    })\r\n    return (\r\n        <div className={\"paginator\"}>\r\n            {paginatorCell}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default Paginator;","export default __webpack_public_path__ + \"static/media/Jedi.9d65cff0.gif\";","import React from 'react'\r\nimport jedy from './../../../../assets/images/Jedi.gif'\r\nimport './PreloaderJedy.css'\r\n\r\nconst PreloaderJedy = () => {\r\n    return (\r\n        <div className={\"preloaderJedy\"}>\r\n            <img className={\"preloaderJedy__img\"} src={jedy} alt=\"\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default PreloaderJedy","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Capitalize } from '../../../../helpers/Capitalize';\r\nimport './Planet.css';\r\n\r\n\r\n\r\n\r\nconst Planet = ({ name, climate, population, id }) => {\r\n    return (\r\n        <NavLink className='planet' to={`/profile/${id}`}>\r\n            <section>\r\n                <div className={\"planet__img\"}>\r\n                    <img className={\"planet__photo\"} src=\"https://dic.academic.ru/pictures/wiki/files/83/Star_Wars_Logo.svg\" alt=\"\" />\r\n                </div>\r\n                <h1>{name}</h1>\r\n                <div className={\"planet__climate\"}>\r\n                    <div className={\"climate__title\"}>\r\n                        <b>Climate</b>\r\n                    </div>\r\n                    <div>\r\n                        {\r\n                            (climate !== 'unknown') ? Capitalize(climate) : \"No information about climate\"\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className={\"planet__population\"} >\r\n                    <div className={\"population__title\"}>\r\n                        <b>Population</b>\r\n                    </div>\r\n                    <div>\r\n                        {(population !== 'unknown') ? population : \"Nobody lives here\"}\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </NavLink >\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Planet;","export let Capitalize = word => word.split(\", \").map(w=>w.split(\"\")[0].toLocaleUpperCase() + w.slice(1)).join(\", \")","import React from 'react';\r\nimport Paginator from '../Common/Paginator/Paginator';\r\nimport PreloaderJedy from '../Common/Preloader/PreloaderJedy/PreloaderJedy';\r\nimport Planet from './Planet/Planet/Planet';\r\nimport './Planets.css';\r\n\r\n\r\n\r\n\r\nconst Planets = ({ planets, onPageChanged, totalPlanetCount, currentPage, isFetching }) => {\r\n    return (\r\n        <div className={\"Planets\"}>\r\n            {\r\n                isFetching && <PreloaderJedy />\r\n            } \r\n            <Paginator\r\n                onPageChanged={onPageChanged}\r\n                totalPlanetCount={totalPlanetCount}\r\n                currentPage={currentPage}\r\n            />\r\n            <div className={\"Planets__container\"}>\r\n                {\r\n                    planets.map(p => {\r\n\r\n                        if(p.name === 'unknown'){\r\n                            return \"\"\r\n                        }\r\n                        return (\r\n                            <Planet\r\n                                key={p.url.split(\"/\")[5]}\r\n                                name={p.name}\r\n                                climate={p.climate}\r\n                                population={p.population}\r\n                                id={p.url.split(\"/\")[5]}\r\n                            />\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default Planets;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getPlanetsThunk } from '../../reducers/planets-reducer';\r\nimport Planets from './Planets';\r\n\r\n\r\n\r\n\r\nclass PlanetsContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getPlanetsThunk(this.props.currentPage)\r\n    }\r\n\r\n    onPageChanged = page => {\r\n        this.props.getPlanetsThunk(page)\r\n    }\r\n    render() {\r\n        return (\r\n            <Planets\r\n                planets={this.props.planets}\r\n                onPageChanged={this.onPageChanged}\r\n                totalPlanetCount={this.props.totalPlanetCount}\r\n                currentPage={this.props.currentPage}\r\n                isFetching={this.props.isFetching}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        currentPage: state.planetsData.currentPage,\r\n        planets: state.planetsData.planets,\r\n        totalPlanetCount: state.planetsData.totalPlanetCount,\r\n        isFetching: state.planetsData.isFetching\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, { getPlanetsThunk })(PlanetsContainer);","import React from 'react';\r\n\r\n\r\n\r\n\r\nconst Profile = ({name}) => {\r\n    return (\r\n        <h1>\r\n            {name}\r\n        </h1>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default Profile;","import { profileApi } from \"../api/api\"\r\nconst SET_PROFILE = 'SET_PROFILE'\r\n\r\nconst initialState = {\r\n    profile: null\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_PROFILE:\r\n            return {...state, profile: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nconst setProfilesAC = profile => ({ type: SET_PROFILE, payload: profile })\r\n\r\n\r\n\r\n\r\n\r\nexport const getPlanetProfileThunk = id => async dispatch => {\r\n    let response = await profileApi.getProfile(id)\r\n    if (response.status === 200) {\r\n        let profile = response.data\r\n        dispatch(setProfilesAC(profile))\r\n    }\r\n\r\n}\r\n\r\nexport default profileReducer;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport Profile from './Profile';\r\nimport { getPlanetProfileThunk } from './../../reducers/profile-reducer'\r\n\r\n\r\n\r\n\r\nclass ProfileContainer extends React['Component'] {\r\n    componentDidMount() {\r\n        let id = this.props.match.params.id\r\n        this.props.getPlanetProfileThunk(id)\r\n    }\r\n    render() {\r\n        return (\r\n            <Profile {...this.props.profile} />\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        profile: state.profileData.profile\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getPlanetProfileThunk }),\r\n    withRouter)(ProfileContainer);","import { Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport PlanetsContainer from './components/Planets/PlanetsContainer';\nimport ProfileContainer from './components/Profile/ProfileContainer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <Switch>\n          <Route exact path='/' render={()=><PlanetsContainer />} />\n          <Route path='/profile/:id' render={()=><ProfileContainer />} />\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import thunk from \"redux-thunk\";\r\nimport planetsReducer from \"../reducers/planets-reducer\";\r\nimport profileReducer from \"../reducers/profile-reducer\";\r\n\r\n\r\n\r\n\r\nconst { createStore, combineReducers, applyMiddleware } = require(\"redux\");\r\n\r\nlet rootReducers = combineReducers({\r\n    planetsData: planetsReducer,\r\n    profileData: profileReducer\r\n})\r\n\r\n\r\n\r\nconst store = createStore(rootReducers, applyMiddleware(thunk));\r\nwindow.store = store\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/redux-store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\nreportWebVitals();\n"],"sourceRoot":""}