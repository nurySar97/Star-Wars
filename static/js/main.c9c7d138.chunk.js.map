{"version":3,"sources":["assets/images/starWarsLogo.png","components/Common/Opening.js","api/api.js","reducers/planets-reducer.js","components/Common/Paginator/Paginator.js","assets/images/Jedi.gif","components/Common/Preloader/PreloaderJedy/PreloaderJedy.jsx","helpers/Capitalize.js","components/Planets/Planet/Planet/Planet.jsx","components/Planets/Planets.jsx","components/Planets/PlanetsContainer.jsx","components/Profile/ProfileResidents/ProfileResidents.jsx","components/Profile/ProfileRow/ProfileRow.jsx","components/Profile/Profile.jsx","reducers/profile-reducer.js","components/Profile/ProfileContainer.js","reducers/app-reducer.js","App.js","reportWebVitals.js","redux/redux-store.js","index.js"],"names":["Opening","className","alt","src","starWars","instance","Axios","baseURL","planetsApi","currentPage","get","profileApi","id","SET_CURRENT_PAGE","SET_PLANETS","SET_TOTAL_COUNT","SET_IS_FETCHING","initialState","planets","totalPlanetCount","isFetching","setCurrentPageAC","type","payload","setPlanetsAC","setIsFetchingAC","planetsReducer","state","action","Paginator","onPageChanged","paginatorCell","Array","Math","ceil","map","e","index","onClick","disabled","PreloaderJedy","jedy","Capitalize","word","split","w","toLocaleUpperCase","slice","join","Planet","name","climate","population","to","Planets","p","url","PlanetsContainer","page","props","getPlanetsThunk","this","div","exit","opacity","animate","initial","transition","duration","React","Component","connect","planetsData","dispatch","a","response","status","count","data","results","ProfileResidents","birth_year","eye_color","gender","hair_color","height","mass","skin_color","useState","showResidentInfo","setResidentInfo","includes","filter","onCloseHandleClick","onOpenHandleClick","isOpened","ProfileRow","title","value","Profile","rotation_period","diameter","gravity","terrain","residentsData","isLoaded","Climate","Terrain","length","SET_PROFILE","SET_RESIDENTS","CLEAR_RESIDENT","IS_LOADED","profile","residents","setProfilesAC","setResidentsAC","isLoadedAC","getResidentThunk","resident","profileReducer","ProfileContainer","match","params","getPlanetProfileThunk","clearResidents","window","scrollTo","compose","profileData","idResidents","forEach","result","push","console","error","withRouter","SET_IS_OPEN","isOpen","appReducer","App","openAppThunk","exact","path","render","appData","Promise","resolve","setTimeout","document","querySelector","style","width","then","setIsOpenAC","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","require","createStore","combineReducers","applyMiddleware","store","thunk","ReactDOM","StrictMode","basename","process","getElementById"],"mappings":"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","file":"static/js/main.c9c7d138.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/starWarsLogo.d02cf214.png\";","import React from 'react';\r\nimport starWars from './../../assets/images/starWarsLogo.png'\r\nimport './Opening.css'\r\n\r\n\r\n\r\nconst Opening = () => {\r\n    return (\r\n        <div className={\"starWars\"}>\r\n            <img className={\"starWars__Img\"} alt={\"starWars\"} src={starWars} />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default Opening;","import * as Axios from 'axios';\r\n\r\nconst instance = Axios.create({\r\n    baseURL: 'https://swapi.dev/api/'\r\n})\r\n\r\n\r\nexport const planetsApi = {\r\n    getPlanets: currentPage => {\r\n        return (\r\n            instance.get(`planets/?page=${currentPage}`)\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport const profileApi = {\r\n    getProfile: id => {\r\n        return (\r\n            instance.get(`planets/${id}/`)\r\n        )\r\n    },\r\n    getResident: id => {\r\n        return (\r\n            instance.get(`people/${id}/`)\r\n        )\r\n    }\r\n}","import { planetsApi } from \"../api/api\";\r\n\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_PLANETS = 'SET_PLANETS';\r\nconst SET_TOTAL_COUNT = 'SET_TOTAL_COUNT'\r\nconst SET_IS_FETCHING = 'SET_IS_FETCHING'\r\n\r\nconst initialState = {\r\n    planets: [],\r\n    currentPage: 1,\r\n    totalPlanetCount: 0,\r\n    isFetching: false\r\n}\r\n\r\nconst planetsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_IS_FETCHING:\r\n            return {...state, isFetching: action.payload}\r\n        case SET_TOTAL_COUNT:\r\n            return {...state, totalPlanetCount: action.payload}\r\n        case SET_PLANETS:\r\n            return { ...state, planets: action.payload }\r\n        case SET_CURRENT_PAGE:\r\n            return { ...state, currentPage: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nconst setCurrentPageAC = currentPage => ({ type: SET_CURRENT_PAGE, payload: currentPage })\r\nconst setPlanetsAC = planets => ({ type: SET_PLANETS, payload: planets })\r\nconst setTotalCountAC = count => ({type: SET_TOTAL_COUNT, payload: count})\r\nconst setIsFetchingAC = isFetching => ({type: SET_IS_FETCHING, payload: isFetching})\r\n\r\n\r\n\r\n\r\n\r\nexport const getPlanetsThunk = (currentPage) => async dispatch => {\r\n    dispatch(setIsFetchingAC(true))\r\n    dispatch(setCurrentPageAC(currentPage))\r\n    let response = await planetsApi.getPlanets(currentPage)\r\n    if (response.status === 200) {\r\n        dispatch(setTotalCountAC(response.data.count))\r\n        let planets = response.data.results\r\n        dispatch(setPlanetsAC(planets))\r\n    }\r\n    dispatch(setIsFetchingAC(false))\r\n\r\n}\r\n\r\nexport default planetsReducer;","import React from 'react';\r\nimport './Paginator.css'\r\n\r\n\r\nconst Paginator = ({ onPageChanged, currentPage, totalPlanetCount }) => {\r\n    let onPageChangedHandleClick = cell => {\r\n        onPageChanged(cell)\r\n    }\r\n    let paginatorCell = [...new Array(Math.ceil(totalPlanetCount / 10))].map((e, index) => {\r\n        return (\r\n            <button\r\n                className={(currentPage === index + 1) ? \"activecell\" : \"cell\"}\r\n                onClick={() => onPageChangedHandleClick(index + 1)}\r\n                key={index + 1}\r\n                disabled={currentPage === index + 1}\r\n            />\r\n        )\r\n    })\r\n    return (\r\n        <div className={\"paginator\"}>\r\n            {paginatorCell}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default Paginator;","export default __webpack_public_path__ + \"static/media/Jedi.9d65cff0.gif\";","import React from 'react'\r\nimport jedy from './../../../../assets/images/Jedi.gif'\r\nimport './PreloaderJedy.css'\r\n\r\nconst PreloaderJedy = () => {\r\n    return (\r\n        <div className={\"preloaderJedy\"}>\r\n            <img className={\"preloaderJedy__img\"} src={jedy} alt=\"\" />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default PreloaderJedy","export let Capitalize = word => word.split(\", \").map(w=>w.split(\"\")[0].toLocaleUpperCase() + w.slice(1)).join(\", \")","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Capitalize } from '../../../../helpers/Capitalize';\r\nimport './Planet.css';\r\n\r\n\r\n\r\n\r\nconst Planet = ({ name, climate, population, id }) => {\r\n    return (\r\n        <NavLink className='planet' to={`/profile/${id}`}>\r\n            <section>\r\n                <div className={\"planet__img\"}>\r\n                    <img className={\"planet__photo\"} src=\"https://dic.academic.ru/pictures/wiki/files/83/Star_Wars_Logo.svg\" alt=\"\" />\r\n                </div>\r\n                <h1>{name}</h1>\r\n                <div className={\"planet__climate\"}>\r\n                    <div className={\"climate__title\"}>\r\n                        <b>Climate</b>\r\n                    </div>\r\n                    <div>\r\n                        {\r\n                            (climate !== 'unknown') ? Capitalize(climate) : \"No information about climate\"\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className={\"planet__population\"} >\r\n                    <div className={\"population__title\"}>\r\n                        <b>Population</b>\r\n                    </div>\r\n                    <div>\r\n                        {(population !== 'unknown') ? (population === \"0\") ? \"No Population\" : population : \"No information\"}\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </NavLink >\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Planet;","import React from 'react';\r\nimport Paginator from '../Common/Paginator/Paginator';\r\nimport PreloaderJedy from '../Common/Preloader/PreloaderJedy/PreloaderJedy';\r\nimport Planet from './Planet/Planet/Planet';\r\nimport './Planets.css';\r\n\r\n\r\n\r\n\r\nconst Planets = ({ planets, onPageChanged, totalPlanetCount, currentPage, isFetching }) => {\r\n    return (\r\n        <div className={\"Planets\"}>\r\n            <div className={\"Planets__title\"}>Stars</div>\r\n            {\r\n                isFetching && <PreloaderJedy />\r\n            }\r\n            <Paginator\r\n                onPageChanged={onPageChanged}\r\n                totalPlanetCount={totalPlanetCount}\r\n                currentPage={currentPage}\r\n            />\r\n            <div className={\"Planets__container\"}>\r\n                {\r\n                    planets.map(p => {\r\n\r\n                        if (p.name === 'unknown') {\r\n                            return \"\"\r\n                        }\r\n                        return (\r\n                            <Planet\r\n                                key={p.url.split(\"/\")[5]}\r\n                                name={p.name}\r\n                                climate={p.climate}\r\n                                population={p.population}\r\n                                id={p.url.split(\"/\")[5]}\r\n                            />\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n            <Paginator\r\n                onPageChanged={onPageChanged}\r\n                totalPlanetCount={totalPlanetCount}\r\n                currentPage={currentPage}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default Planets;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getPlanetsThunk } from '../../reducers/planets-reducer';\r\nimport Planets from './Planets';\r\nimport { motion } from 'framer-motion'\r\n\r\n\r\n\r\n\r\nclass PlanetsContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getPlanetsThunk(this.props.currentPage)\r\n    }\r\n\r\n    onPageChanged = page => {\r\n        this.props.getPlanetsThunk(page)\r\n    }\r\n    render() {\r\n        return (\r\n            <motion.div\r\n                exit={{ opacity: 0 }}\r\n                animate={{ opacity: 1 }}\r\n                initial={{ opacity: 0 }}\r\n                transition={{ duration: 1.5 }}\r\n            >\r\n                <Planets\r\n                    planets={this.props.planets}\r\n                    onPageChanged={this.onPageChanged}\r\n                    totalPlanetCount={this.props.totalPlanetCount}\r\n                    currentPage={this.props.currentPage}\r\n                    isFetching={this.props.isFetching}\r\n                />\r\n            </motion.div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        currentPage: state.planetsData.currentPage,\r\n        planets: state.planetsData.planets,\r\n        totalPlanetCount: state.planetsData.totalPlanetCount,\r\n        isFetching: state.planetsData.isFetching\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, { getPlanetsThunk })(PlanetsContainer);","import React, { useState } from 'react';\r\nimport './ProfileResidents.css'\r\nimport { Collapse } from 'react-collapse';\r\n\r\n\r\n\r\nconst ProfileResidents = ({ name, birth_year, eye_color, gender, hair_color, height, mass, skin_color }) => {\r\n    const [showResidentInfo, setResidentInfo] = useState([])\r\n    const onOpenHandleClick = name => {\r\n        setResidentInfo([...showResidentInfo, name])\r\n    }\r\n\r\n    const onCloseHandleClick = name => {\r\n        setResidentInfo(showResidentInfo.filter(a => a !== name))\r\n    }\r\n    return (\r\n        <div key={name} className=\"resident\">\r\n            <h1>{name}</h1>\r\n\r\n            {\r\n                showResidentInfo.includes(name)\r\n                    ?\r\n                    <button onClick={() => onCloseHandleClick(name)} className=\"resident__btn\">Close</button>\r\n                    :\r\n                    <button onClick={() => onOpenHandleClick(name)} className=\"resident__btn\">Read More...</button>\r\n\r\n            }\r\n\r\n            <Collapse isOpened={showResidentInfo.includes(name)}>\r\n                <div className=\"resident__informations\">\r\n                    <div className=\"resident__information\">\r\n                        <span className={\"resident__value\"}>\r\n                            Birth Year:\r\n                        </span>\r\n                        <span className={\"resident__key\"}>\r\n                            {\"unknown\" === birth_year ? \"No information\" : birth_year}\r\n                        </span>\r\n                    </div>\r\n\r\n                    <div className=\"resident__information\">\r\n                        <span className={\"resident__value\"}>\r\n                            Eye Color:\r\n                        </span>\r\n                        <span className={\"resident__key\"}>\r\n                            {\"unknown\" === eye_color ? \"No information\" : eye_color }\r\n                        </span>\r\n                    </div>\r\n\r\n                    <div className=\"resident__information\">\r\n                        <span className={\"resident__value\"}>\r\n                            Gender: \r\n                        </span>\r\n                        <span className={\"resident__key\"}>\r\n                            {\"unknown\" === gender ? \"No information\" : gender}\r\n                        </span>\r\n                    </div>\r\n\r\n                    <div className=\"resident__information\">\r\n                        <span className={\"resident__value\"}>\r\n                            Hair Color:\r\n                        </span>\r\n                        <span className={\"resident__key\"}>\r\n                            {\"unknown\" === hair_color ? \"No information\" : hair_color }\r\n                        </span>\r\n                    </div>\r\n\r\n                    <div className=\"resident__information\">\r\n                        <span className={\"resident__value\"}>\r\n                            Height: \r\n                        </span>\r\n                        <span className={\"resident__key\"}>\r\n                            {\"unknown\" === height ? \"No information\" : height}\r\n                        </span>\r\n                    </div>\r\n\r\n                    <div className=\"resident__information\">\r\n                        <span className={\"resident__value\"}>\r\n                            Mass: \r\n                        </span>\r\n                        <span className={\"resident__key\"}>\r\n                            {\"unknown\" === mass ? \"No information\" : mass}\r\n                        </span>\r\n                    </div>\r\n\r\n                    <div className=\"resident__information\">\r\n                        <span className={\"resident__value\"}>\r\n                            Skin Color: \r\n                        </span>\r\n                        <span className={\"resident__key\"}>\r\n                            {\"unknown\" === skin_color ? \"No information\" : skin_color}\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default ProfileResidents","import React from 'react';\r\nimport './ProfileRow.css'\r\n\r\n\r\nconst ProfileRow = (title, value) => {\r\n    return (\r\n        <tbody className=\"profile__tbody\">\r\n            <tr className=\"profile__row\">\r\n                <td className=\"profile__name\">\r\n                    {title !== \"unknown\" ? title : \"No information\"}\r\n                </td>\r\n                <td className=\"profile__amount\">\r\n                    {(value !== \"unknown\" && \"Unknown\" !== value) ? value : \"No information\"}\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default ProfileRow;","import React from 'react';\r\nimport { Capitalize } from '../../helpers/Capitalize';\r\nimport PreloaderJedy from '../Common/Preloader/PreloaderJedy/PreloaderJedy';\r\nimport './Profile.css';\r\nimport ProfileResidents from './ProfileResidents/ProfileResidents';\r\nimport ProfileRow from './ProfileRow/ProfileRow';\r\n\r\n\r\n\r\nconst Profile = ({\r\n    name,\r\n    rotation_period,\r\n    diameter,\r\n    climate,\r\n    gravity,\r\n    terrain,\r\n    population,\r\n    residentsData,\r\n    isLoaded }) => {\r\n    let Climate = climate ? Capitalize(climate) : climate\r\n    let Terrain = terrain ? Capitalize(terrain) : terrain\r\n    return (\r\n        <>\r\n            <div className=\"profile\">\r\n                <div className=\"profile__container\">\r\n                    <div className=\"profile__title\">\r\n                        {name}\r\n                    </div>\r\n                    <table className=\"profile__table\">\r\n                        {ProfileRow('Rotation Period', rotation_period)}\r\n                        {ProfileRow('Diameter', diameter)}\r\n                        {ProfileRow('Climate', Climate)}\r\n                        {ProfileRow('Gravity', gravity)}\r\n                        {ProfileRow('Terrain', Terrain)}\r\n                        {ProfileRow('Population', population)}\r\n                    </table>\r\n                    <div className=\"profile__residents\">\r\n                        Residents:\r\n                    </div>\r\n                    <div className=\"residents\">\r\n                        {\r\n                            isLoaded ? <PreloaderJedy />\r\n                                :\r\n                                residentsData.length\r\n                                    ?\r\n                                    residentsData.map(a => {\r\n                                        return <ProfileResidents key={a.name} {...a} />\r\n                                    })\r\n                                    :\r\n                                    <div className=\"resident__alter\">No Residents</div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Profile;","import { profileApi } from \"../api/api\";\r\nconst SET_PROFILE = 'SET_PROFILE';\r\nconst SET_RESIDENTS = 'SET_RESIDENTS';\r\nconst CLEAR_RESIDENT = 'CLEAR_RESIDENT'\r\nconst IS_LOADED = 'IS__LOADED'\r\n\r\nconst initialState = {\r\n    profile: null,\r\n    residents: [],\r\n    isLoaded: false\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case IS_LOADED:\r\n            return { ...state, isLoaded: action.payload }\r\n        case CLEAR_RESIDENT:\r\n            return { ...state, residents: [] }\r\n        case SET_RESIDENTS:\r\n            return { ...state, residents: action.payload }\r\n        case SET_PROFILE:\r\n            return { ...state, profile: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nconst setProfilesAC = profile => ({ type: SET_PROFILE, payload: profile })\r\nconst setResidentsAC = residents => ({ type: SET_RESIDENTS, payload: residents })\r\nconst clearResidentsAC = () => ({ type: CLEAR_RESIDENT })\r\nconst isLoadedAC = value => ({ type: IS_LOADED, payload: value })\r\n\r\n\r\nexport const getResidentThunk = id => async dispatch => {\r\n    let response = await profileApi.getResident(id)\r\n    if (response.status === 200) {\r\n        let resident = response.data\r\n        return resident\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const clearResidents = () => dispatch => {\r\n    dispatch(clearResidentsAC())\r\n}\r\n\r\n\r\n\r\nexport const getPlanetProfileThunk = id => async dispatch => {\r\n    try {\r\n        dispatch(isLoadedAC(true))\r\n        let response = await profileApi.getProfile(id)\r\n        if (response.status === 200) {\r\n            let profile = response.data\r\n            dispatch(setProfilesAC(profile))\r\n            let idResidents = profile.residents.map(a => a.split(\"/\")[5])\r\n            let residents = []\r\n            idResidents.forEach(async resident => {\r\n                let result = await dispatch(getResidentThunk(resident))\r\n                residents.push(result)\r\n                if(idResidents.length === residents.length){\r\n                    dispatch(setResidentsAC(residents))\r\n                }\r\n            })\r\n        }\r\n        dispatch(isLoadedAC(false))\r\n    } catch (err) {\r\n        console.error(err)\r\n    }\r\n\r\n}\r\n\r\nexport default profileReducer;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport Profile from './Profile';\r\nimport { clearResidents, getPlanetProfileThunk } from './../../reducers/profile-reducer'\r\nimport { motion } from 'framer-motion';\r\n\r\n\r\n\r\nclass ProfileContainer extends React['Component'] {\r\n    componentDidMount() {\r\n        let id = this.props.match.params.id\r\n        this.props.getPlanetProfileThunk(id)\r\n        this.props.clearResidents()\r\n        window.scrollTo(0, 0)\r\n    }\r\n    render() {\r\n        return (\r\n            <motion.div\r\n                exit={{ opacity: 0 }}\r\n                animate={{ opacity: 1 }}\r\n                initial={{ opacity: 0 }}\r\n                transition={{ duration: 1.5 }}\r\n            >\r\n                <Profile \r\n                    {...this.props.profile} \r\n                    residentsData={this.props.residentsData}\r\n                    isLoaded={this.props.isLoaded}\r\n                />\r\n            </motion.div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        profile: state.profileData.profile,\r\n        residentsData: state.profileData.residents,\r\n        isLoaded: state.profileData.isLoaded\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getPlanetProfileThunk, clearResidents }),\r\n    withRouter)(ProfileContainer);","const SET_IS_OPEN = 'SET_IS_OPEN'\r\n\r\nconst initialState = {\r\n    isOpen: true\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_IS_OPEN:\r\n            return { ...state, isOpen: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst setIsOpenAC = value => ({ type: SET_IS_OPEN, payload: value })\r\n\r\nexport const openAppThunk = value => dispatch => {\r\n    new Promise(resolve => {\r\n        setTimeout(() => {\r\n            document.querySelector(\".starWars__Img\").style.width = \"0\"\r\n            resolve()\r\n        })\r\n    }).then(() => {\r\n        setTimeout(() => {\r\n            dispatch(setIsOpenAC(value))\r\n        }, 3000)\r\n    })\r\n}\r\n\r\nexport default appReducer;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Opening from './components/Common/Opening';\nimport PlanetsContainer from './components/Planets/PlanetsContainer';\nimport ProfileContainer from './components/Profile/ProfileContainer';\nimport { openAppThunk } from './reducers/app-reducer';\nimport { AnimatePresence } from 'framer-motion'\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.openAppThunk(false)\n  }\n  render() {\n    if (this.props.isOpen) {\n      return <Opening />\n    }\n    return (\n      <div className=\"App\">\n        <div className=\"container\">\n          <AnimatePresence>\n            <Switch>\n              <Route exact path='/' render={() => <PlanetsContainer />} />\n              <Route path='/profile/:id' render={() => <ProfileContainer />} />\n            </Switch>\n          </AnimatePresence>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    isOpen: state.appData.isOpen\n  }\n}\n\n\nexport default connect(mapStateToProps, { openAppThunk })(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import thunk from \"redux-thunk\";\r\nimport appReducer from \"../reducers/app-reducer\";\r\nimport planetsReducer from \"../reducers/planets-reducer\";\r\nimport profileReducer from \"../reducers/profile-reducer\";\r\nconst { createStore, combineReducers, applyMiddleware } = require(\"redux\");\r\n\r\nlet rootReducers = combineReducers({\r\n    planetsData: planetsReducer,\r\n    profileData: profileReducer,\r\n    appData: appReducer\r\n})\r\n\r\n\r\n\r\nconst store = createStore(rootReducers, applyMiddleware(thunk));\r\nwindow.store = store\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/redux-store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\nreportWebVitals();\n"],"sourceRoot":""}