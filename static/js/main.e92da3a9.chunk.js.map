{"version":3,"sources":["assets/images/starWarsLogo.png","components/Common/Opening.js","api/api.js","reducers/planets-reducer.js","components/Common/Paginator/Paginator.js","assets/images/Jedi.gif","components/Common/Preloader/PreloaderJedy/PreloaderJedy.jsx","helpers/Capitalize.js","components/Planets/Planet/Planet/Planet.jsx","components/Planets/Planets.jsx","components/Planets/PlanetsContainer.jsx","components/Profile/ProfileRow/ProfileRow.jsx","components/Profile/Profile.jsx","reducers/profile-reducer.js","helpers/CompareObjects.js","components/Profile/ProfileContainer.js","reducers/app-reducer.js","App.js","reportWebVitals.js","redux/redux-store.js","index.js"],"names":["Opening","className","alt","src","starWars","instance","Axios","baseURL","planetsApi","currentPage","get","profileApi","id","SET_CURRENT_PAGE","SET_PLANETS","SET_TOTAL_COUNT","SET_IS_FETCHING","initialState","planets","totalPlanetCount","isFetching","setCurrentPageAC","type","payload","setPlanetsAC","setIsFetchingAC","planetsReducer","state","action","Paginator","onPageChanged","paginatorCell","Array","Math","ceil","map","e","index","onClick","disabled","PreloaderJedy","jedy","Capitalize","word","split","w","toLocaleUpperCase","slice","join","Planet","name","climate","population","to","Planets","p","url","PlanetsContainer","page","props","getPlanetsThunk","this","React","Component","connect","planetsData","dispatch","a","response","status","count","data","results","ProfileRow","title","value","Profile","rotation_period","diameter","gravity","terrain","Climate","residents","Terrain","SET_PROFILE","SET_RESIDENT","CLEAR_RESIDENT","profile","setProfilesAC","setResidentAC","resident","profileReducer","compareObjects","obj1","obj2","JSON","stringify","ProfileContainer","match","params","getPlanetProfileThunk","clearResidents","prevProps","forEach","element","getResidentThunk","nextProps","compose","profileData","withRouter","SET_IS_OPEN","isOpen","appReducer","App","openAppThunk","exact","path","render","appData","Promise","resolve","setTimeout","document","querySelector","style","width","then","setIsOpenAC","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","require","createStore","combineReducers","applyMiddleware","store","thunk","window","ReactDOM","StrictMode","basename","process","getElementById"],"mappings":"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","file":"static/js/main.e92da3a9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/starWarsLogo.d02cf214.png\";","import React from 'react';\r\nimport starWars from './../../assets/images/starWarsLogo.png'\r\nimport './Opening.css'\r\n\r\n\r\n\r\nconst Opening = () => {\r\n    return (\r\n        <div className={\"starWars\"}>\r\n            <img className={\"starWars__Img\"} alt={\"starWars\"} src={starWars} />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default Opening;","import * as Axios from 'axios';\r\n\r\nconst instance = Axios.create({\r\n    baseURL: 'https://swapi.dev/api/'\r\n})\r\n\r\n\r\n\r\n\r\nexport const planetsApi = {\r\n    getPlanets: currentPage => {\r\n        return (\r\n            instance.get(`planets/?page=${currentPage}`)\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport const profileApi = {\r\n    getProfile: id => {\r\n        return (\r\n            instance.get(`planets/${id}/`)\r\n        )\r\n    },\r\n    getResident: id =>{\r\n        return (\r\n            instance.get(`people/${id}/`)\r\n        )\r\n    }\r\n}","import { planetsApi } from \"../api/api\";\r\n\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_PLANETS = 'SET_PLANETS';\r\nconst SET_TOTAL_COUNT = 'SET_TOTAL_COUNT'\r\nconst SET_IS_FETCHING = 'SET_IS_FETCHING'\r\n\r\nconst initialState = {\r\n    planets: [],\r\n    currentPage: 1,\r\n    totalPlanetCount: 0,\r\n    isFetching: false\r\n}\r\n\r\nconst planetsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_IS_FETCHING:\r\n            return {...state, isFetching: action.payload}\r\n        case SET_TOTAL_COUNT:\r\n            return {...state, totalPlanetCount: action.payload}\r\n        case SET_PLANETS:\r\n            return { ...state, planets: action.payload }\r\n        case SET_CURRENT_PAGE:\r\n            return { ...state, currentPage: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nconst setCurrentPageAC = currentPage => ({ type: SET_CURRENT_PAGE, payload: currentPage })\r\nconst setPlanetsAC = planets => ({ type: SET_PLANETS, payload: planets })\r\nconst setTotalCountAC = count => ({type: SET_TOTAL_COUNT, payload: count})\r\nconst setIsFetchingAC = isFetching => ({type: SET_IS_FETCHING, payload: isFetching})\r\n\r\n\r\n\r\n\r\n\r\nexport const getPlanetsThunk = (currentPage) => async dispatch => {\r\n    dispatch(setIsFetchingAC(true))\r\n    dispatch(setCurrentPageAC(currentPage))\r\n    let response = await planetsApi.getPlanets(currentPage)\r\n    if (response.status === 200) {\r\n        dispatch(setTotalCountAC(response.data.count))\r\n        let planets = response.data.results\r\n        dispatch(setPlanetsAC(planets))\r\n    }\r\n    dispatch(setIsFetchingAC(false))\r\n\r\n}\r\n\r\nexport default planetsReducer;","import React from 'react';\r\nimport './Paginator.css'\r\n\r\n\r\nconst Paginator = ({ onPageChanged, currentPage, totalPlanetCount }) => {\r\n    let onPageChangedHandleClick = cell => {\r\n        onPageChanged(cell)\r\n    }\r\n    let paginatorCell = [...new Array(Math.ceil(totalPlanetCount / 10))].map((e, index) => {\r\n        return (\r\n            <button\r\n                className={(currentPage === index + 1) ? \"activecell\" : \"cell\"}\r\n                onClick={() => onPageChangedHandleClick(index + 1)}\r\n                key={index + 1}\r\n                disabled={currentPage === index + 1}\r\n            />\r\n        )\r\n    })\r\n    return (\r\n        <div className={\"paginator\"}>\r\n            {paginatorCell}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default Paginator;","export default __webpack_public_path__ + \"static/media/Jedi.9d65cff0.gif\";","import React from 'react'\r\nimport jedy from './../../../../assets/images/Jedi.gif'\r\nimport './PreloaderJedy.css'\r\n\r\nconst PreloaderJedy = () => {\r\n    return (\r\n        <div className={\"preloaderJedy\"}>\r\n            <img className={\"preloaderJedy__img\"} src={jedy} alt=\"\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default PreloaderJedy","export let Capitalize = word => word.split(\", \").map(w=>w.split(\"\")[0].toLocaleUpperCase() + w.slice(1)).join(\", \")","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Capitalize } from '../../../../helpers/Capitalize';\r\nimport './Planet.css';\r\n\r\n\r\n\r\n\r\nconst Planet = ({ name, climate, population, id }) => {\r\n    return (\r\n        <NavLink className='planet' to={`/profile/${id}`}>\r\n            <section>\r\n                <div className={\"planet__img\"}>\r\n                    <img className={\"planet__photo\"} src=\"https://dic.academic.ru/pictures/wiki/files/83/Star_Wars_Logo.svg\" alt=\"\" />\r\n                </div>\r\n                <h1>{name}</h1>\r\n                <div className={\"planet__climate\"}>\r\n                    <div className={\"climate__title\"}>\r\n                        <b>Climate</b>\r\n                    </div>\r\n                    <div>\r\n                        {\r\n                            (climate !== 'unknown') ? Capitalize(climate) : \"No information about climate\"\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className={\"planet__population\"} >\r\n                    <div className={\"population__title\"}>\r\n                        <b>Population</b>\r\n                    </div>\r\n                    <div>\r\n                        {(population !== 'unknown') ? (population === \"0\") ? \"No Population\" : population : \"No information\"}\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </NavLink >\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Planet;","import React from 'react';\r\nimport Paginator from '../Common/Paginator/Paginator';\r\nimport PreloaderJedy from '../Common/Preloader/PreloaderJedy/PreloaderJedy';\r\nimport Planet from './Planet/Planet/Planet';\r\nimport './Planets.css';\r\n\r\n\r\n\r\n\r\nconst Planets = ({ planets, onPageChanged, totalPlanetCount, currentPage, isFetching }) => {\r\n    return (\r\n        <div className={\"Planets\"}>\r\n            {\r\n                isFetching && <PreloaderJedy />\r\n            } \r\n            <Paginator\r\n                onPageChanged={onPageChanged}\r\n                totalPlanetCount={totalPlanetCount}\r\n                currentPage={currentPage}\r\n            />\r\n            <div className={\"Planets__container\"}>\r\n                {\r\n                    planets.map(p => {\r\n\r\n                        if(p.name === 'unknown'){\r\n                            return \"\"\r\n                        }\r\n                        return (\r\n                            <Planet\r\n                                key={p.url.split(\"/\")[5]}\r\n                                name={p.name}\r\n                                climate={p.climate}\r\n                                population={p.population}\r\n                                id={p.url.split(\"/\")[5]}\r\n                            />\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default Planets;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getPlanetsThunk } from '../../reducers/planets-reducer';\r\nimport Planets from './Planets';\r\n\r\n\r\n\r\n\r\nclass PlanetsContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getPlanetsThunk(this.props.currentPage)\r\n    }\r\n\r\n    onPageChanged = page => {\r\n        this.props.getPlanetsThunk(page)\r\n    }\r\n    render() {\r\n        return (\r\n            <Planets\r\n                planets={this.props.planets}\r\n                onPageChanged={this.onPageChanged}\r\n                totalPlanetCount={this.props.totalPlanetCount}\r\n                currentPage={this.props.currentPage}\r\n                isFetching={this.props.isFetching}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        currentPage: state.planetsData.currentPage,\r\n        planets: state.planetsData.planets,\r\n        totalPlanetCount: state.planetsData.totalPlanetCount,\r\n        isFetching: state.planetsData.isFetching\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, { getPlanetsThunk })(PlanetsContainer);","import React from 'react';\r\nimport './ProfileRow.css'\r\n\r\n\r\nconst ProfileRow = (title, value) => {\r\n    return (\r\n        <tbody className=\"profile__tbody\">\r\n            <tr className=\"profile__row\">\r\n                <td className=\"profile__name\">\r\n                    {title}\r\n                </td>\r\n                <td className=\"profile__amount\">\r\n                    {value}\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default ProfileRow;","import React from 'react';\r\nimport { Capitalize } from '../../helpers/Capitalize';\r\nimport './Profile.css';\r\nimport ProfileRow from './ProfileRow/ProfileRow';\r\n\r\n\r\n\r\nconst Profile = ({\r\n    name,\r\n    rotation_period,\r\n    diameter,\r\n    climate,\r\n    gravity,\r\n    terrain,\r\n    population,\r\n    residents }) => {\r\n        let Climate = climate ? Capitalize(climate) : climate\r\n        let Terrain = terrain ? Capitalize(terrain) : terrain\r\n    return (\r\n        <div className=\"profile\">\r\n            <div className=\"profile__container\">\r\n                <div className=\"profile__title\">\r\n                    {name}\r\n                </div>\r\n                <table className=\"profile__table\">\r\n                    {ProfileRow('Rotation Period', rotation_period)}\r\n                    {ProfileRow('Diameter', diameter)}\r\n                    {ProfileRow('Climate', Climate)}\r\n                    {ProfileRow('Gravity', gravity)}\r\n                    {ProfileRow('Terrain', Terrain)}\r\n                    {ProfileRow('Population',population)}\r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Profile;","import { profileApi } from \"../api/api\";\r\nconst SET_PROFILE = 'SET_PROFILE';\r\nconst SET_RESIDENT = 'SET_RESIDENT';\r\nconst CLEAR_RESIDENT = 'CLEAR_RESIDENT'\r\n\r\nconst initialState = {\r\n    profile: null,\r\n    residents: []\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case CLEAR_RESIDENT:\r\n            return { ...state, residents: [] }\r\n        case SET_RESIDENT:\r\n            return { ...state, residents: [...state.residents, action.payload] }\r\n        case SET_PROFILE:\r\n            return { ...state, profile: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nconst setProfilesAC = profile => ({ type: SET_PROFILE, payload: profile })\r\nconst setResidentAC = resident => ({ type: SET_RESIDENT, payload: resident })\r\nconst clearResidentsAC = () => ({ type: CLEAR_RESIDENT })\r\n\r\n\r\nexport const getResidentThunk = id => async dispatch => {\r\n    let response = await profileApi.getResident(id)\r\n    if (response.status === 200) {\r\n        let resident = response.data\r\n        dispatch(setResidentAC(resident))\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const clearResidents = () => dispatch => {\r\n    dispatch(clearResidentsAC())\r\n}\r\n\r\n\r\n\r\nexport const getPlanetProfileThunk = id => async dispatch => {\r\n    let response = await profileApi.getProfile(id)\r\n    if (response.status === 200) {\r\n        let profile = response.data\r\n        dispatch(setProfilesAC(profile))\r\n    }\r\n\r\n}\r\n\r\nexport default profileReducer;","export const compareObjects = (obj1, obj2) => (JSON.stringify(obj1) === JSON.stringify(obj2)) ? false : true","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport Profile from './Profile';\r\nimport { clearResidents, getPlanetProfileThunk, getResidentThunk } from './../../reducers/profile-reducer'\r\nimport { compareObjects } from '../../helpers/CompareObjects';\r\n\r\n\r\n\r\n\r\nclass ProfileContainer extends React['Component'] {\r\n    componentDidMount() {\r\n        let id = this.props.match.params.id\r\n        this.props.getPlanetProfileThunk(id)\r\n        this.props.clearResidents()\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (compareObjects(prevProps.profile, this.props.profile)) {\r\n            let idResidents = this.props.profile.residents.map(a => a.split(\"/\")[5])\r\n            idResidents.forEach(element => {\r\n                this.props.getResidentThunk(element)\r\n            });\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps) {\r\n        return (compareObjects(nextProps, this.props)) ? true : false\r\n    }\r\n    render() {\r\n        return (\r\n            <Profile {...this.props.profile} />\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        profile: state.profileData.profile\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getPlanetProfileThunk, getResidentThunk, clearResidents }),\r\n    withRouter)(ProfileContainer);","const SET_IS_OPEN = 'SET_IS_OPEN'\r\n\r\nconst initialState = {\r\n    isOpen: true\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_IS_OPEN:\r\n            return { ...state, isOpen: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nconst setIsOpenAC = value => ({ type: SET_IS_OPEN, payload: value })\r\n\r\n\r\n\r\n\r\n\r\nexport const openAppThunk = value => dispatch => {\r\n    new Promise(resolve => {\r\n        setTimeout(() => {\r\n            document.querySelector(\".starWars__Img\").style.width = \"0\"\r\n            resolve()\r\n        })\r\n    }).then(() => {\r\n        setTimeout(() => {\r\n            dispatch(setIsOpenAC(value))\r\n        }, 3000)\r\n    })\r\n}\r\n\r\nexport default appReducer;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Opening from './components/Common/Opening';\nimport PlanetsContainer from './components/Planets/PlanetsContainer';\nimport ProfileContainer from './components/Profile/ProfileContainer';\nimport { openAppThunk } from './reducers/app-reducer';\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.openAppThunk(false)\n  }\n  render() {\n    if (this.props.isOpen) {\n      return <Opening />\n    }\n    return (\n      <div className=\"App\">\n        <div className=\"container\">\n          <Switch>\n            <Route exact path='/' render={() => <PlanetsContainer />} />\n            <Route path='/profile/:id' render={() => <ProfileContainer />} />\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    isOpen: state.appData.isOpen\n  }\n}\n\n\nexport default connect(mapStateToProps, { openAppThunk })(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import thunk from \"redux-thunk\";\r\nimport appReducer from \"../reducers/app-reducer\";\r\nimport planetsReducer from \"../reducers/planets-reducer\";\r\nimport profileReducer from \"../reducers/profile-reducer\";\r\nconst { createStore, combineReducers, applyMiddleware } = require(\"redux\");\r\n\r\nlet rootReducers = combineReducers({\r\n    planetsData: planetsReducer,\r\n    profileData: profileReducer,\r\n    appData: appReducer\r\n})\r\n\r\n\r\n\r\nconst store = createStore(rootReducers, applyMiddleware(thunk));\r\nwindow.store = store\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/redux-store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\nreportWebVitals();\n"],"sourceRoot":""}