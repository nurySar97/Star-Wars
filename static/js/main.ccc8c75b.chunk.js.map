{"version":3,"sources":["assets/images/starWarsLogo.png","components/Common/Opening.js","api/api.js","reducers/planets-reducer.js","components/Common/Paginator/Paginator.js","assets/images/Jedi.gif","components/Common/Preloader/PreloaderJedy/PreloaderJedy.jsx","helpers/Capitalize.js","components/Planets/Planet/Planet/Planet.jsx","components/Planets/Planets.jsx","components/Planets/PlanetsContainer.jsx","components/Profile/ProfileResidents/ResidentInfo/ResidentInfo.jsx","components/Profile/ProfileResidents/ProfileResidents.jsx","components/Profile/ProfileRow/ProfileRow.jsx","components/Profile/Profile.jsx","reducers/profile-reducer.js","components/Profile/ProfileContainer.js","reducers/app-reducer.js","App.js","reportWebVitals.js","redux/redux-store.js","index.js"],"names":["Opening","className","alt","src","starWars","instance","Axios","baseURL","planetsApi","currentPage","get","profileApi","id","SET_CURRENT_PAGE","SET_PLANETS","SET_TOTAL_COUNT","SET_IS_FETCHING","initialState","planets","totalPlanetCount","isFetching","setCurrentPageAC","type","payload","setPlanetsAC","setIsFetchingAC","planetsReducer","state","action","Paginator","onPageChanged","paginatorCell","Array","Math","ceil","map","e","index","onClick","disabled","PreloaderJedy","jedy","Capitalize","word","split","w","toLocaleUpperCase","slice","join","Planet","name","climate","population","to","Planets","p","url","PlanetsContainer","page","props","getPlanetsThunk","this","div","exit","opacity","animate","initial","transition","duration","React","Component","connect","planetsData","dispatch","a","response","status","count","data","results","ResidentInfo","keyWord","value","ProfileResidents","useState","showResidentInfo","setResidentInfo","includes","filter","isOpened","Object","keys","ProfileRow","Profile","element","isLoaded","residentsData","length","SET_PROFILE","SET_RESIDENTS","CLEAR_RESIDENT","IS_LOADED","profile","residents","setProfilesAC","setResidentsAC","isLoadedAC","getResidentThunk","resident","profileReducer","ProfileContainer","match","params","getPlanetProfileThunk","clearResidents","window","scrollTo","compose","profileData","idResidents","forEach","result","push","console","error","withRouter","SET_IS_OPEN","isOpen","appReducer","App","openAppThunk","exact","path","render","dangerouslySetInnerHTML","__html","appData","Promise","resolve","setTimeout","document","querySelector","style","width","then","setIsOpenAC","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","require","createStore","combineReducers","applyMiddleware","store","thunk","ReactDOM","StrictMode","basename","process","getElementById"],"mappings":"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","file":"static/js/main.ccc8c75b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/starWarsLogo.d02cf214.png\";","import React from 'react';\r\nimport starWars from './../../assets/images/starWarsLogo.png'\r\nimport './Opening.css'\r\n\r\n\r\n\r\nconst Opening = () => {\r\n    return (\r\n        <div className={\"starWars\"}>\r\n            <img className={\"starWars__Img\"} alt={\"starWars\"} src={starWars} />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default Opening;","import * as Axios from 'axios';\r\n\r\nconst instance = Axios.create({\r\n    baseURL: 'https://swapi.dev/api/'\r\n})\r\n\r\n\r\nexport const planetsApi = {\r\n    getPlanets: currentPage => {\r\n        return (\r\n            instance.get(`planets/?page=${currentPage}`)\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport const profileApi = {\r\n    getProfile: id => {\r\n        return (\r\n            instance.get(`planets/${id}/`)\r\n        )\r\n    },\r\n    getResident: id => {\r\n        return (\r\n            instance.get(`people/${id}/`)\r\n        )\r\n    }\r\n}","import { planetsApi } from \"../api/api\";\r\n\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_PLANETS = 'SET_PLANETS';\r\nconst SET_TOTAL_COUNT = 'SET_TOTAL_COUNT'\r\nconst SET_IS_FETCHING = 'SET_IS_FETCHING'\r\n\r\nconst initialState = {\r\n    planets: [],\r\n    currentPage: 1,\r\n    totalPlanetCount: 0,\r\n    isFetching: false\r\n}\r\n\r\nconst planetsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_IS_FETCHING:\r\n            return {...state, isFetching: action.payload}\r\n        case SET_TOTAL_COUNT:\r\n            return {...state, totalPlanetCount: action.payload}\r\n        case SET_PLANETS:\r\n            return { ...state, planets: action.payload }\r\n        case SET_CURRENT_PAGE:\r\n            return { ...state, currentPage: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nconst setCurrentPageAC = currentPage => ({ type: SET_CURRENT_PAGE, payload: currentPage })\r\nconst setPlanetsAC = planets => ({ type: SET_PLANETS, payload: planets })\r\nconst setTotalCountAC = count => ({type: SET_TOTAL_COUNT, payload: count})\r\nconst setIsFetchingAC = isFetching => ({type: SET_IS_FETCHING, payload: isFetching})\r\n\r\n\r\n\r\n\r\n\r\nexport const getPlanetsThunk = (currentPage) => async dispatch => {\r\n    dispatch(setIsFetchingAC(true))\r\n    dispatch(setCurrentPageAC(currentPage))\r\n    let response = await planetsApi.getPlanets(currentPage)\r\n    if (response.status === 200) {\r\n        dispatch(setTotalCountAC(response.data.count))\r\n        let planets = response.data.results\r\n        dispatch(setPlanetsAC(planets))\r\n    }\r\n    dispatch(setIsFetchingAC(false))\r\n\r\n}\r\n\r\nexport default planetsReducer;","import React from 'react';\r\nimport './Paginator.css'\r\n\r\n\r\nconst Paginator = ({ onPageChanged, currentPage, totalPlanetCount }) => {\r\n    let onPageChangedHandleClick = cell => {\r\n        onPageChanged(cell)\r\n    }\r\n    let paginatorCell = [...new Array(Math.ceil(totalPlanetCount / 10))].map((e, index) => {\r\n        return (\r\n            <button\r\n                className={(currentPage === index + 1) ? \"activecell\" : \"cell\"}\r\n                onClick={() => onPageChangedHandleClick(index + 1)}\r\n                key={index + 1}\r\n                disabled={currentPage === index + 1}\r\n            />\r\n        )\r\n    })\r\n    return (\r\n        <div className={\"paginator\"}>\r\n            {paginatorCell}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default Paginator;","export default __webpack_public_path__ + \"static/media/Jedi.9d65cff0.gif\";","import React from 'react'\r\nimport jedy from './../../../../assets/images/Jedi.gif'\r\nimport './PreloaderJedy.css'\r\n\r\nconst PreloaderJedy = () => {\r\n    return (\r\n        <div className={\"preloaderJedy\"}>\r\n            <img className={\"preloaderJedy__img\"} src={jedy} alt=\"\" />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default PreloaderJedy","export let Capitalize = word => word.split(\", \").map(w=>w.split(\"\")[0].toLocaleUpperCase() + w.slice(1)).join(\", \")","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Capitalize } from '../../../../helpers/Capitalize';\r\nimport './Planet.css';\r\n\r\n\r\n\r\n\r\nconst Planet = ({ name, climate, population, id }) => {\r\n    return (\r\n        <NavLink className='planet' to={`/profile/${id}`}>\r\n            <section>\r\n                <div className={\"planet__img\"}>\r\n                    <img className={\"planet__photo\"} src=\"https://dic.academic.ru/pictures/wiki/files/83/Star_Wars_Logo.svg\" alt=\"\" />\r\n                </div>\r\n                <h1>{name}</h1>\r\n                <div className={\"planet__climate\"}>\r\n                    <div className={\"climate__title\"}>\r\n                        <b>Climate</b>\r\n                    </div>\r\n                    <div>\r\n                        {\r\n                            (climate !== 'unknown') ? Capitalize(climate) : \"No information about climate\"\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className={\"planet__population\"} >\r\n                    <div className={\"population__title\"}>\r\n                        <b>Population</b>\r\n                    </div>\r\n                    <div>\r\n                        {(population !== 'unknown') ? (population === \"0\") ? \"No Population\" : population : \"No information\"}\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </NavLink >\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Planet;","import React from 'react';\r\nimport Paginator from '../Common/Paginator/Paginator';\r\nimport PreloaderJedy from '../Common/Preloader/PreloaderJedy/PreloaderJedy';\r\nimport Planet from './Planet/Planet/Planet';\r\nimport './Planets.css';\r\n\r\n\r\n\r\n\r\nconst Planets = ({ planets, onPageChanged, totalPlanetCount, currentPage, isFetching }) => {\r\n    return (\r\n        <div className={\"Planets\"}>\r\n            <div className={\"Planets__title\"}>Stars</div>\r\n            {\r\n                isFetching && <PreloaderJedy />\r\n            }\r\n            <Paginator\r\n                onPageChanged={onPageChanged}\r\n                totalPlanetCount={totalPlanetCount}\r\n                currentPage={currentPage}\r\n            />\r\n            <div className={\"Planets__container\"}>\r\n                {\r\n                    planets.map(p => {\r\n\r\n                        if (p.name === 'unknown') {\r\n                            return \"\"\r\n                        }\r\n                        return (\r\n                            <Planet\r\n                                key={p.url.split(\"/\")[5]}\r\n                                name={p.name}\r\n                                climate={p.climate}\r\n                                population={p.population}\r\n                                id={p.url.split(\"/\")[5]}\r\n                            />\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n            <Paginator\r\n                onPageChanged={onPageChanged}\r\n                totalPlanetCount={totalPlanetCount}\r\n                currentPage={currentPage}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default Planets;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getPlanetsThunk } from '../../reducers/planets-reducer';\r\nimport Planets from './Planets';\r\nimport { motion } from 'framer-motion'\r\n\r\n\r\n\r\n\r\nclass PlanetsContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getPlanetsThunk(this.props.currentPage)\r\n    }\r\n\r\n    onPageChanged = page => {\r\n        this.props.getPlanetsThunk(page)\r\n    }\r\n    render() {\r\n        return (\r\n            <motion.div\r\n                exit={{ opacity: 0 }}\r\n                animate={{ opacity: 1 }}\r\n                initial={{ opacity: 0 }}\r\n                transition={{ duration: 1.5 }}\r\n            >\r\n                <Planets\r\n                    planets={this.props.planets}\r\n                    onPageChanged={this.onPageChanged}\r\n                    totalPlanetCount={this.props.totalPlanetCount}\r\n                    currentPage={this.props.currentPage}\r\n                    isFetching={this.props.isFetching}\r\n                />\r\n            </motion.div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        currentPage: state.planetsData.currentPage,\r\n        planets: state.planetsData.planets,\r\n        totalPlanetCount: state.planetsData.totalPlanetCount,\r\n        isFetching: state.planetsData.isFetching\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, { getPlanetsThunk })(PlanetsContainer);","import React from 'react';\r\nimport './../ProfileResidents.css'\r\n\r\n\r\n\r\nconst ResidentInfo = ({ keyWord, value }) => {\r\n    return (\r\n        <div className=\"resident__information\">\r\n            <span className={\"resident__value\"}>\r\n                {keyWord}:\r\n            </span>\r\n            <span className={\"resident__key\"}>\r\n                {\"unknown\" === value ? \"No information\" : value}\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default ResidentInfo;","import React, { useState } from 'react';\r\nimport './ProfileResidents.css'\r\nimport { Collapse } from 'react-collapse';\r\nimport { Capitalize } from '../../../helpers/Capitalize';\r\nimport ResidentInfo from './ResidentInfo/ResidentInfo';\r\n\r\n\r\n\r\nconst ProfileResidents = props => {\r\n    const [showResidentInfo, setResidentInfo] = useState([])\r\n    const onOpenHandleClick = name => {\r\n        setResidentInfo([...showResidentInfo, name])\r\n    }\r\n\r\n    const onCloseHandleClick = name => {\r\n        setResidentInfo(showResidentInfo.filter(a => a !== name))\r\n    }\r\n    return (\r\n        <div key={props.name} className=\"resident\">\r\n            <h1>{props.name}</h1>\r\n\r\n            {\r\n                showResidentInfo.includes(props.name)\r\n                    ?\r\n                    <button onClick={() => onCloseHandleClick(props.name)} className=\"resident__btn\">Close</button>\r\n                    :\r\n                    <button onClick={() => onOpenHandleClick(props.name)} className=\"resident__btn\">Read More...</button>\r\n\r\n            }\r\n\r\n            <Collapse isOpened={showResidentInfo.includes(props.name)}>\r\n                <div className=\"resident__informations\">\r\n                    {\r\n                        Object.keys(props).map(a => {\r\n                            if (\r\n                                a === 'created'\r\n                                || a === 'edited'\r\n                                || a === 'films'\r\n                                || a === 'homeworld'\r\n                                || a === 'species'\r\n                                || a === 'starships'\r\n                                || a === 'url'\r\n                                || a === 'vehicles'\r\n                            ) {\r\n                                return undefined\r\n                            }\r\n                            let keyWord = Capitalize(a.split(\"_\").join(\" \"))\r\n                            return <ResidentInfo key={a} keyWord={keyWord} value={props[a]} />\r\n                        })\r\n                    }\r\n                </div>\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default ProfileResidents","import React from 'react';\r\nimport './ProfileRow.css'\r\n\r\n\r\nconst ProfileRow = ({keyWord, value}) => {\r\n    return (\r\n        <tbody className=\"profile__tbody\">\r\n            <tr key={keyWord} className=\"profile__row\">\r\n                <td className=\"profile__name\">\r\n                    {keyWord !== \"unknown\" ? keyWord : \"No information\"}\r\n                </td>\r\n                <td className=\"profile__amount\">\r\n                    {(value !== \"unknown\" && \"Unknown\" !== value) ? value : \"No information\"}\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default ProfileRow;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Capitalize } from '../../helpers/Capitalize';\r\nimport PreloaderJedy from '../Common/Preloader/PreloaderJedy/PreloaderJedy';\r\nimport './Profile.css';\r\nimport ProfileResidents from './ProfileResidents/ProfileResidents';\r\nimport ProfileRow from './ProfileRow/ProfileRow';\r\n\r\n\r\n\r\nconst Profile = props => {\r\n    return (\r\n        <>\r\n            <div className=\"profile\">\r\n                <div className=\"profile__container\">\r\n                    <NavLink to=\"/planets\" className={\"profile__backbtn\"} >\r\n                        <i className=\"far fa-arrow-alt-circle-left\"></i>\r\n                    </NavLink>\r\n                    <div className=\"profile__title\">\r\n                        {props.name}\r\n                    </div>\r\n                    <table className=\"profile__table\">\r\n                        {\r\n                            !!props.climate\r\n                            && Object.keys(props).map(element => {\r\n                                if (\r\n                                    element === 'isLoaded'\r\n                                    || element === 'residentsData'\r\n                                    || element === 'created'\r\n                                    || element === 'edited'\r\n                                    || element === 'films'\r\n                                    || element === 'residents'\r\n                                    || element === 'url'\r\n                                    || element === 'name'\r\n\r\n                                ) return undefined\r\n\r\n                                let keyWord = Capitalize(element.split(\"_\").join(\" \"))\r\n                                return <ProfileRow key={element} keyWord={keyWord} value={props[element]} />\r\n                            })\r\n                        }\r\n                    </table>\r\n                    <div className=\"profile__residents\">\r\n                        Residents:\r\n                    </div>\r\n                    <div className=\"residents\">\r\n                        {\r\n                            props.isLoaded ? <PreloaderJedy />\r\n                                :\r\n                                props.residentsData.length\r\n                                    ?\r\n                                    props.residentsData.map(a => {\r\n                                        return <ProfileResidents key={a.name} {...a} />\r\n                                    })\r\n                                    :\r\n                                    <div className=\"resident__alter\">No Residents</div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Profile;","import { profileApi } from \"../api/api\";\r\nconst SET_PROFILE = 'SET_PROFILE';\r\nconst SET_RESIDENTS = 'SET_RESIDENTS';\r\nconst CLEAR_RESIDENT = 'CLEAR_RESIDENT'\r\nconst IS_LOADED = 'IS__LOADED'\r\n\r\nconst initialState = {\r\n    profile: null,\r\n    residents: [],\r\n    isLoaded: false\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case IS_LOADED:\r\n            return { ...state, isLoaded: action.payload }\r\n        case CLEAR_RESIDENT:\r\n            return { ...state, residents: [] }\r\n        case SET_RESIDENTS:\r\n            return { ...state, residents: action.payload }\r\n        case SET_PROFILE:\r\n            return { ...state, profile: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nconst setProfilesAC = profile => ({ type: SET_PROFILE, payload: profile })\r\nconst setResidentsAC = residents => ({ type: SET_RESIDENTS, payload: residents })\r\nconst clearResidentsAC = () => ({ type: CLEAR_RESIDENT })\r\nconst isLoadedAC = value => ({ type: IS_LOADED, payload: value })\r\n\r\n\r\nexport const getResidentThunk = id => async dispatch => {\r\n    let response = await profileApi.getResident(id)\r\n    if (response.status === 200) {\r\n        let resident = response.data\r\n        return resident\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const clearResidents = () => dispatch => {\r\n    dispatch(clearResidentsAC())\r\n}\r\n\r\n\r\n\r\nexport const getPlanetProfileThunk = id => async dispatch => {\r\n    try {\r\n        dispatch(isLoadedAC(true))\r\n        let response = await profileApi.getProfile(id)\r\n        if (response.status === 200) {\r\n            let profile = response.data\r\n            dispatch(setProfilesAC(profile))\r\n            let idResidents = profile.residents.map(a => a.split(\"/\")[5])\r\n            let residents = []\r\n            idResidents.forEach(async resident => {\r\n                let result = await dispatch(getResidentThunk(resident))\r\n                residents.push(result)\r\n                if(idResidents.length === residents.length){\r\n                    dispatch(setResidentsAC(residents))\r\n                }\r\n            })\r\n        }\r\n        dispatch(isLoadedAC(false))\r\n    } catch (err) {\r\n        console.error(err)\r\n    }\r\n\r\n}\r\n\r\nexport default profileReducer;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport Profile from './Profile';\r\nimport { clearResidents, getPlanetProfileThunk } from './../../reducers/profile-reducer'\r\nimport { motion } from 'framer-motion';\r\n\r\n\r\n\r\nclass ProfileContainer extends React['Component'] {\r\n    componentDidMount() {\r\n        let id = this.props.match.params.id\r\n        this.props.getPlanetProfileThunk(id)\r\n        this.props.clearResidents()\r\n        window.scrollTo(0, 0)\r\n    }\r\n    render() {\r\n        return (\r\n            <motion.div\r\n                exit={{ opacity: 0 }}\r\n                animate={{ opacity: 1 }}\r\n                initial={{ opacity: 0 }}\r\n                transition={{ duration: 1.5 }}\r\n            >\r\n                <Profile \r\n                    {...this.props.profile} \r\n                    residentsData={this.props.residentsData}\r\n                    isLoaded={this.props.isLoaded}\r\n                />\r\n            </motion.div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        profile: state.profileData.profile,\r\n        residentsData: state.profileData.residents,\r\n        isLoaded: state.profileData.isLoaded\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getPlanetProfileThunk, clearResidents }),\r\n    withRouter)(ProfileContainer);","const SET_IS_OPEN = 'SET_IS_OPEN'\r\n\r\nconst initialState = {\r\n    isOpen: true\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_IS_OPEN:\r\n            return { ...state, isOpen: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst setIsOpenAC = value => ({ type: SET_IS_OPEN, payload: value })\r\n\r\nexport const openAppThunk = value => dispatch => {\r\n    new Promise(resolve => {\r\n        setTimeout(() => {\r\n            document.querySelector(\".starWars__Img\").style.width = \"0\"\r\n            resolve()\r\n        })\r\n    }).then(() => {\r\n        setTimeout(() => {\r\n            dispatch(setIsOpenAC(value))\r\n        }, 3000)\r\n    })\r\n}\r\n\r\nexport default appReducer;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Opening from './components/Common/Opening';\nimport PlanetsContainer from './components/Planets/PlanetsContainer';\nimport ProfileContainer from './components/Profile/ProfileContainer';\nimport { openAppThunk } from './reducers/app-reducer';\nimport { AnimatePresence } from 'framer-motion'\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.openAppThunk(false)\n  }\n  render() {\n    if (this.props.isOpen) {\n      return <Opening />\n    }\n    return (\n      <div className=\"App\">\n        <div className=\"container\">\n          <AnimatePresence>\n            <Switch>\n              <Route exact path='/' render={() => <PlanetsContainer />} />\n              <Route path='/profile/:id' render={() => <ProfileContainer />} />\n              <Route path='/planets' render={()=><PlanetsContainer />} />\n              <Route\n                  key={\"*\"}\n                  path='*'\n                  render={() => <div dangerouslySetInnerHTML={{ __html: \"404 NOT FOUND\" }} />}\n                />\n            </Switch>\n          </AnimatePresence>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    isOpen: state.appData.isOpen\n  }\n}\n\n\nexport default connect(mapStateToProps, { openAppThunk })(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import thunk from \"redux-thunk\";\r\nimport appReducer from \"../reducers/app-reducer\";\r\nimport planetsReducer from \"../reducers/planets-reducer\";\r\nimport profileReducer from \"../reducers/profile-reducer\";\r\nconst { createStore, combineReducers, applyMiddleware } = require(\"redux\");\r\n\r\nlet rootReducers = combineReducers({\r\n    planetsData: planetsReducer,\r\n    profileData: profileReducer,\r\n    appData: appReducer\r\n})\r\n\r\n\r\n\r\nconst store = createStore(rootReducers, applyMiddleware(thunk));\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/redux-store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\nreportWebVitals();\n"],"sourceRoot":""}