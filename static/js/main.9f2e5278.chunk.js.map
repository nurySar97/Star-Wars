{"version":3,"sources":["api/api.js","reducers/planets-reducer.js","components/Planets/Planet/Planet/Planet.jsx","components/Planets/Planets.jsx","components/PlanetsContainer.jsx","App.js","reportWebVitals.js","redux/redux-store.js","index.js"],"names":["instance","Axios","baseURL","planetsApi","currentPage","get","SET_CURRENT_PAGE","SET_PLANETS","initialState","planets","setCurrentPageAC","type","setPlanetsAC","planetsReducer","state","action","Planet","name","climate","population","className","Planets","onPageChanged","map","p","PlanetsContainer","page","props","getPlanetsThunkCreator","this","React","Component","connect","planetsData","dispatch","a","response","console","log","status","data","results","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","require","createStore","combineReducers","applyMiddleware","store","thunk","window","ReactDOM","render","StrictMode","basename","process","document","getElementById"],"mappings":"iUAEMA,E,MAAWC,OAAa,CAC1BC,QAAS,2BAMAC,EACG,SAAAC,GACR,OACIJ,EAASK,IAAT,wBAA8BD,KCVpCE,EAAmB,mBACnBC,EAAc,cAEdC,EAAe,CACjBC,QAAS,GACTL,YAAa,GAeXM,EAAmB,SAAAN,GAAW,MAAK,CAAEO,KAAML,EAAkBF,gBAC7DQ,EAAe,SAAAH,GAAO,MAAK,CAAEE,KAAMJ,EAAaE,YAiBvCI,EA9BQ,WAAmC,IAAlCC,EAAiC,uDAAzBN,EAAcO,EAAW,uCACrD,OAAQA,EAAOJ,MACX,KAAKJ,EACD,OAAO,2BAAKO,GAAZ,IAAmBL,QAASM,EAAON,UACvC,KAAKH,EACD,OAAO,2BAAKQ,GAAZ,IAAmBV,YAAaW,EAAOX,cAC3C,QACI,OAAOU,ICCJE,G,MAZA,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,WAC7B,OACI,0BAASC,UAAU,SAAnB,UACI,6BAAKH,IACL,4CAAeC,EAAf,OACA,+CAAkBC,UCkBfE,G,MAtBC,SAAC,GAAgC,IAA9BZ,EAA6B,EAA7BA,QAA6B,EAApBa,cACxB,OACI,qBAAKF,UAAU,UAAf,SAEQX,EAAQc,KAAI,SAAAC,GACR,OACI,cAAC,EAAD,CAEIP,KAAMO,EAAEP,KACRC,QAASM,EAAEN,QACXC,WAAYK,EAAEL,YAHTK,EAAEP,aCN7BQ,E,4MAKFH,cAAgB,SAAAI,GACZ,EAAKC,MAAMC,uBAAuBF,I,kEAJlCG,KAAKF,MAAMC,uBAAuBC,KAAKF,MAAMvB,e,+BAO7C,OACI,cAAC,EAAD,CACIK,QAASoB,KAAKF,MAAMlB,QACpBa,cAAeO,KAAKP,oB,GAZLQ,IAAMC,WA4BtBC,eATS,SAAAlB,GACpB,MAAO,CACHV,YAAaU,EAAMmB,YAAY7B,YAC/BK,QAASK,EAAMmB,YAAYxB,WAMK,CAAEmB,uBHPJ,SAACxB,GAAD,8CAAiB,WAAM8B,GAAN,iBAAAC,EAAA,6DACnDD,EAASxB,EAAiBN,IADyB,SAE9BD,EAAsBC,GAFQ,OAE/CgC,EAF+C,OAGnDC,QAAQC,IAAIF,GACY,MAApBA,EAASG,SACL9B,EAAU2B,EAASI,KAAKC,QAC5BP,EAAStB,EAAaH,KANyB,2CAAjB,wDGOvBuB,CAAqDP,GCvBrDiB,MAVf,WACE,OACE,qBAAKtB,UAAU,MAAf,SACE,qBAAKA,UAAU,YAAf,SACE,cAAC,EAAD,SCKOuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,kBCD4CQ,EAAQ,IAA1DC,E,EAAAA,YAAaC,E,EAAAA,gBAAiBC,E,EAAAA,gBAQhCC,EAAQH,EANKC,EAAgB,CAC/BrB,YAAapB,IAKuB0C,EAAgBE,MACxDC,OAAOF,MAAQA,EACAA,QCPfG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAeC,SAAUC,aAAzB,SACE,cAAC,IAAD,CAAUP,MAAOA,EAAjB,SACE,cAAC,EAAD,UAINQ,SAASC,eAAe,SAK1BtB,M","file":"static/js/main.9f2e5278.chunk.js","sourcesContent":["import * as Axios from 'axios';\r\n\r\nconst instance = Axios.create({\r\n    baseURL: 'https://swapi.dev/api/'\r\n})\r\n\r\n\r\n\r\n\r\nexport const planetsApi = {\r\n    getPlanets: currentPage => {\r\n        return (\r\n            instance.get(`planets/?page=${currentPage}`)\r\n        )\r\n    }\r\n}","import { planetsApi } from \"../api/api\";\r\n\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_PLANETS = 'SET_PLANETS';\r\n\r\nconst initialState = {\r\n    planets: [],\r\n    currentPage: 1\r\n}\r\n\r\nconst planetsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_PLANETS:\r\n            return { ...state, planets: action.planets }\r\n        case SET_CURRENT_PAGE:\r\n            return { ...state, currentPage: action.currentPage }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nconst setCurrentPageAC = currentPage => ({ type: SET_CURRENT_PAGE, currentPage })\r\nconst setPlanetsAC = planets => ({ type: SET_PLANETS, planets })\r\n\r\n\r\n\r\n\r\n\r\nexport const getPlanetsThunkCreator = (currentPage) => async dispatch => {\r\n    dispatch(setCurrentPageAC(currentPage))\r\n    let response = await planetsApi.getPlanets(currentPage)\r\n    console.log(response)\r\n    if (response.status === 200) {\r\n        let planets = response.data.results\r\n        dispatch(setPlanetsAC(planets))\r\n    }\r\n\r\n}\r\n\r\nexport default planetsReducer;","import React from 'react';\r\nimport './Planet.css';\r\n\r\n\r\n\r\n\r\nconst Planet = ({ name, climate, population }) => {\r\n    return (\r\n        <section className='Planet'>\r\n            <h1>{name}</h1>\r\n            <div>Climate: {climate} </div>\r\n            <div>Population: {population}</div>\r\n        </section>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Planet;","import React from 'react';\r\nimport Planet from './Planet/Planet/Planet';\r\nimport './Planets.css';\r\n\r\n\r\n\r\n\r\nconst Planets = ({ planets, onPageChanged }) => {\r\n    return (\r\n        <div className=\"Planets\">\r\n            {\r\n                planets.map(p => {\r\n                    return (\r\n                        <Planet\r\n                            key={p.name}\r\n                            name={p.name}\r\n                            climate={p.climate}\r\n                            population={p.population}\r\n                        />\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default Planets;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getPlanetsThunkCreator } from '../reducers/planets-reducer';\r\nimport Planets from './Planets/Planets';\r\n\r\n\r\n\r\n\r\nclass PlanetsContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getPlanetsThunkCreator(this.props.currentPage)\r\n    }\r\n\r\n    onPageChanged = page => {\r\n        this.props.getPlanetsThunkCreator(page)\r\n    }\r\n    render() {\r\n        return (\r\n            <Planets\r\n                planets={this.props.planets}\r\n                onPageChanged={this.onPageChanged}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        currentPage: state.planetsData.currentPage,\r\n        planets: state.planetsData.planets\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, { getPlanetsThunkCreator })(PlanetsContainer);","import './App.css';\nimport PlanetsContainer from './components/PlanetsContainer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <PlanetsContainer />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import thunk from \"redux-thunk\";\r\nimport planetsReducer from \"../reducers/planets-reducer\";\r\n\r\n\r\n\r\n\r\nconst { createStore, combineReducers, applyMiddleware } = require(\"redux\");\r\n\r\nlet rootReducers = combineReducers({\r\n    planetsData: planetsReducer\r\n})\r\n\r\n\r\n\r\nconst store = createStore(rootReducers, applyMiddleware(thunk));\r\nwindow.store = store\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/redux-store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\nreportWebVitals();\n"],"sourceRoot":""}